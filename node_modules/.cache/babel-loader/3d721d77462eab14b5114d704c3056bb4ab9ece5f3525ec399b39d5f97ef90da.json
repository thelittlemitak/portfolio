{"ast":null,"code":"var _jsxFileName = \"/Users/joserieratur/Desktop/react-test/new-mmm-pfolder/src/pages/profile/mains/Hobbies.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport HeaderTable3Col from \"../components/HeaderTable3Col\";\nimport DoubtIcon from \"../../../components/DoubtIcon\";\nimport GoalTable3Col from \"../components/GoalTable3Col\";\nimport InputTable3Col from \"../components/InputTable3Col\";\nimport GenericWrapper from \"../../../components/GenericWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hobbies(props) {\n  _s();\n  const [tempoGoals, setTempoGoals] = useState(props.dataTunnel);\n  let newNumber = Math.random();\n  const [inputTempoGoal, setInputTempoGoal] = useState(\"\");\n  const [inputTempoAction, setInputTempoAction] = useState(\"\");\n  let [classer1, setclasser1] = useState(\"\");\n  let [classer2, setclasser2] = useState(\"\");\n  function tempoGoalListener(e) {\n    let inputTempoGoal = e.target.value;\n    setInputTempoGoal(inputTempoGoal);\n    if (inputTempoGoal.length != 0) {\n      setclasser1(\"\");\n      return classer1;\n    }\n  }\n  function tempoActionListener(e) {\n    let inputTempoAction = e.target.value;\n    setInputTempoAction(inputTempoAction);\n    if (inputTempoAction.length != 0) {\n      setclasser2(\"\");\n      return classer2;\n    }\n  }\n  const Pusher = function () {\n    if (inputTempoGoal.length === 0 || inputTempoAction.length === 0) {\n      if (inputTempoGoal.length === 0) {\n        setclasser1(\"empty-input\");\n      }\n      if (inputTempoAction.length === 0) {\n        setclasser2(\"empty-input\");\n      }\n      return;\n    }\n    setTempoGoals([...tempoGoals, {\n      goal: inputTempoGoal,\n      action: inputTempoAction,\n      id: newNumber\n    }]);\n    setclasser1(\"\");\n    setclasser2(\"\");\n    setInputTempoGoal(\"\");\n    setInputTempoAction(\"\");\n  };\n  const removeF = function (e) {\n    let idOfCheckboxPressed = e.target.id;\n    let indexOfCheckboxPressed = tempoGoals.findIndex(x => x.id == idOfCheckboxPressed);\n    tempoGoals.splice(indexOfCheckboxPressed, 1);\n    setTempoGoals([...tempoGoals]);\n  };\n  return /*#__PURE__*/_jsxDEV(GenericWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      class: \"h3-profile\",\n      children: [\"Ideas\", /*#__PURE__*/_jsxDEV(DoubtIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"info-box info-box--hidden\",\n        children: \"Time to enjoy! It is good to remind ourselves what we can do when we finished with out        \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"profile-table\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderTable3Col, {\n        col1Tunnel: props.titlesTunnel[2].col1,\n        col2Tunnel: props.titlesTunnel[2].col2,\n        col3Tunnel: props.titlesTunnel[2].col3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), tempoGoals.map(x => /*#__PURE__*/_jsxDEV(GoalTable3Col, {\n        goalTunnel: x.goal,\n        actionPndgTunnel: x.action,\n        idTunnel: x.id,\n        btnFTunnel: removeF\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(InputTable3Col, {\n        btnFTunnel: Pusher,\n        goalLiFTunnel: tempoGoalListener,\n        actionLiFTunnel: tempoActionListener,\n        goalDefaultTunnel: inputTempoGoal,\n        actionDefaultTunnel: inputTempoAction,\n        placeHolder1Tunnel: \"Goal summary\",\n        placeHolder2Tunnel: \"Deconstruction\",\n        classTunnel1: `profile-input profile-input-goal ${classer1}`,\n        classTunnel2: `profile-input profile-input-goal ${classer2}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Hobbies, \"cV4keYBj/ZaVS/VB0pg7gbg0Du4=\");\n_c = Hobbies;\nexport default Hobbies;\nvar _c;\n$RefreshReg$(_c, \"Hobbies\");","map":{"version":3,"names":["React","useState","HeaderTable3Col","DoubtIcon","GoalTable3Col","InputTable3Col","GenericWrapper","Hobbies","props","tempoGoals","setTempoGoals","dataTunnel","newNumber","Math","random","inputTempoGoal","setInputTempoGoal","inputTempoAction","setInputTempoAction","classer1","setclasser1","classer2","setclasser2","tempoGoalListener","e","target","value","length","tempoActionListener","Pusher","goal","action","id","removeF","idOfCheckboxPressed","indexOfCheckboxPressed","findIndex","x","splice","titlesTunnel","col1","col2","col3","map"],"sources":["/Users/joserieratur/Desktop/react-test/new-mmm-pfolder/src/pages/profile/mains/Hobbies.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport HeaderTable3Col from \"../components/HeaderTable3Col\";\nimport DoubtIcon from \"../../../components/DoubtIcon\";\nimport GoalTable3Col from \"../components/GoalTable3Col\";\nimport InputTable3Col from \"../components/InputTable3Col\";\nimport GenericWrapper from \"../../../components/GenericWrapper\";\n\nfunction Hobbies(props) {\n  const [tempoGoals, setTempoGoals] = useState(props.dataTunnel);\n\n  let newNumber = Math.random();\n\n  const [inputTempoGoal, setInputTempoGoal] = useState(\"\");\n  const [inputTempoAction, setInputTempoAction] = useState(\"\");\n\n  let [classer1, setclasser1] = useState(\"\");\n  let [classer2, setclasser2] = useState(\"\");\n\n  function tempoGoalListener(e) {\n    let inputTempoGoal = e.target.value;\n    setInputTempoGoal(inputTempoGoal);\n    if (inputTempoGoal.length != 0) {\n      setclasser1(\"\");\n      return classer1;\n    }\n  }\n\n  function tempoActionListener(e) {\n    let inputTempoAction = e.target.value;\n    setInputTempoAction(inputTempoAction);\n    if (inputTempoAction.length != 0) {\n      setclasser2(\"\");\n      return classer2;\n    }\n  }\n\n  const Pusher = function () {\n    if (inputTempoGoal.length === 0 || inputTempoAction.length === 0) {\n      if (inputTempoGoal.length === 0) {\n        setclasser1(\"empty-input\");\n      }\n      if (inputTempoAction.length === 0) {\n        setclasser2(\"empty-input\");\n      }\n      return;\n    }\n\n    setTempoGoals([\n      ...tempoGoals,\n      { goal: inputTempoGoal, action: inputTempoAction, id: newNumber },\n    ]);\n    setclasser1(\"\");\n    setclasser2(\"\");\n    setInputTempoGoal(\"\");\n    setInputTempoAction(\"\");\n  };\n\n  const removeF = function (e) {\n    let idOfCheckboxPressed = e.target.id;\n    let indexOfCheckboxPressed = tempoGoals.findIndex(\n      (x) => x.id == idOfCheckboxPressed\n    );\n    tempoGoals.splice(indexOfCheckboxPressed, 1);\n    setTempoGoals([...tempoGoals]);\n  };\n\n  return (\n    <GenericWrapper>\n      <h3 class=\"h3-profile\">\n        Ideas\n        <DoubtIcon></DoubtIcon>\n        <div class=\"info-box info-box--hidden\">\nTime to enjoy! It is good to remind ourselves what we can do when we finished with out        </div>\n      </h3>\n      <table class=\"profile-table\">\n        <HeaderTable3Col\n          col1Tunnel={props.titlesTunnel[2].col1}\n          col2Tunnel={props.titlesTunnel[2].col2}\n          col3Tunnel={props.titlesTunnel[2].col3}\n        ></HeaderTable3Col>\n        {tempoGoals.map((x) => (\n          <GoalTable3Col\n            goalTunnel={x.goal}\n            actionPndgTunnel={x.action}\n            idTunnel={x.id}\n            key={x.id}\n            btnFTunnel={removeF}\n          ></GoalTable3Col>\n        ))}\n        <InputTable3Col\n          btnFTunnel={Pusher}\n          goalLiFTunnel={tempoGoalListener}\n          actionLiFTunnel={tempoActionListener}\n          goalDefaultTunnel={inputTempoGoal}\n          actionDefaultTunnel={inputTempoAction}\n          placeHolder1Tunnel={\"Goal summary\"}\n          placeHolder2Tunnel={\"Deconstruction\"}\n          classTunnel1={`profile-input profile-input-goal ${classer1}`}\n          classTunnel2={`profile-input profile-input-goal ${classer2}`}\n        ></InputTable3Col>\n      </table>\n    </GenericWrapper>\n  );\n}\n\nexport default Hobbies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}